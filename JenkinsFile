pipeline {
    agent any

    environment {
        SONAR_HOST_URL = 'http://192.168.50.2:9000'
        DOCKER_HUB_REPO = 'ahmedfourati54/achatimage:achatimage'
    }

    stages {
        stage('get_code') {
            steps {
                echo 'Pulling code'
                git branch: 'ahmed', url: 'https://github.com/chaimabondka/achatproject'
            }
        }
        stage('mvn_clean') {
            steps {
                echo 'Running mvn clean'
                sh 'mvn clean'
            }
        }
        stage('mvn_compile') {
            steps {
                echo 'Running mvn compile'
                sh 'mvn compile'
            }
        }
        stage('SonarQube analysis') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'sonar-login', usernameVariable: 'SONAR_USER', passwordVariable: 'SONAR_PASSWORD')]) {
                    sh 'mvn sonar:sonar \
                        -Dsonar.host.url=${SONAR_HOST_URL} \
                        -Dsonar.login=${SONAR_USER} \
                        -Dsonar.password=${SONAR_PASSWORD}'
                }
            }
        }
        stage('mvn_test_mockito') {
            steps {
                echo 'Running mvn test'
                sh 'mvn test'
            }
        }
        stage('NEXUS') {
            steps {
                sh 'mvn deploy'
            }
        }
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image'
                sh 'docker build -t achatimage:latest -f Dockerfile ./'
                echo "Docker image achatimage:latest built successfully"
            }
        }
        stage('DOCKER HUB') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                    sh "docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}"
                    sh "docker tag achatimage:latest ${DOCKER_HUB_REPO}"
                    sh "docker push ${DOCKER_HUB_REPO}"
                }
            }
        }
        stage('Run Docker-Compose') {
            steps {
                sh 'docker compose up -d'
            }
        }
        stage('GRAFANA') {
            steps {
                echo 'GRAFANA'
            }
        }
    }
}
